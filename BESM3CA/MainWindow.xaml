<Window x:Class="BESM3CA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"           
        xmlns:local="clr-namespace:BESM3CA"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="BESM3CA" Height="600" Width="1060" MinHeight="570" MinWidth="540" Loaded="Window_Loaded">


    <Grid>
        <Grid.Resources>
            <local:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <local:NullBooleanConverter x:Key="NullToBooleanConverter"/>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="250"/>
                <RowDefinition Height="170"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <Menu Background="White" >

                    <MenuItem Header="_File" >
                        <MenuItem x:Name="NewMenuItem" Header="_New" Click="NewMenuItem_Click"  />
                        <MenuItem x:Name="OpenMenuItem" Header="_Open" Click="OpenMenuItem_Click" />
                        <MenuItem x:Name="SaveMenuItem" Header="_Save" Click="SaveMenuItem_Click" />
                        <MenuItem x:Name="SaveAsMenuItem" Header="Save _As" Click="SaveAsMenuItem_Click" />
                        <MenuItem x:Name="ExportToTextMenuItem" Header="Export to _Text" Click="ExportToTextMenuItem_Click" />
                        <MenuItem x:Name="ExportToHTMLMenuItem" Header="Export to _HTML" Click="ExportToHTMLMenuItem_Click" />
                        <!--<MenuItem x:Name="ImportOldMenuItem" Header="_Import Old Format" Click="ImportOldMenuItem_Click" />-->
                        <MenuItem Header="_Print" />
                        <MenuItem Header="Print Pre_view" />
                        <MenuItem x:Name="ExitMenuItem" Header="E_xit" Click="ExitMenuItem_Click" />
                    </MenuItem>
                    <MenuItem Header="_Tools">
                        <MenuItem Header="_Customize"/>
                        <MenuItem Header="_Options"/>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="_Contents"/>
                        <MenuItem Header="_Index"/>
                        <MenuItem Header="_Search"/>
                        <MenuItem Header="_About..."/>
                    </MenuItem>
                </Menu>
            </Grid>
            <Grid Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" MinWidth="200"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="3*" MinWidth="30"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label  Content="Genre: " Margin="10,10,10,5" Width="Auto" Grid.Column="0" />
                        <ComboBox x:Name="GenreComboBox" Margin="10,10,10,5" Grid.Column="1" ItemsSource="{Binding Path=CurrentEntity.GenreList}" Visibility="{Binding Path=CurrentEntity.GenreList[0], Converter={StaticResource NullToVisibilityConverter}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=GenreName}"/>    
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>
                    </Grid>

                    <TreeView Grid.Row="1"  x:Name="CharacterTreeView"  Margin="10,10,10,10" HorizontalAlignment="Stretch" ItemsSource="{Binding Path=CurrentEntity.Root}" SelectedItemChanged="CharacterTreeView_SelectedItemChanged" >
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="x:Type BaseNode" ItemsSource="{Binding Path=Children}">
                                <TextBlock Text="{Binding Path=DisplayText}"  />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>                                
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </Grid>

                <StackPanel Grid.Column="1" Margin="10,5,10,10" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <Button x:Name="MoveUpButton" Content="Move Up" Margin="5,5,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=CurrentEntity.SelectedNode.MoveUpCommand, Converter={StaticResource NullToBooleanConverter}}"/>
                    <Button x:Name="MoveDownButton" Content="Move Down" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=CurrentEntity.SelectedNode.MoveDownCommand, Converter={StaticResource NullToBooleanConverter}}" />
                    <Button x:Name="AddAttButton" Content="Add" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=CurrentEntity.SelectedNode.AddCommand, Converter={StaticResource NullToBooleanConverter}}" />
                    <Button x:Name="DelAttButton" Content="Delete" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=CurrentEntity.SelectedNode.DeleteCommand, Converter={StaticResource NullToBooleanConverter}}" />
                    <Button x:Name="RaiseLevelButton" Content="Raise Level" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Visibility="{Binding Path=CurrentEntity.SelectedLevelable, Converter={StaticResource NullToVisibilityConverter}}" Command="{Binding Path=CurrentEntity.SelectedLevelable.RaiseLevelCommand, Converter={StaticResource NullToBooleanConverter}}"/>
                    <Button x:Name="LowerLevelButton" Content="Lower Level" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Visibility="{Binding Path=CurrentEntity.SelectedLevelable, Converter={StaticResource NullToVisibilityConverter}}" Command="{Binding Path=CurrentEntity.SelectedLevelable.LowerLevelCommand, Converter={StaticResource NullToBooleanConverter}}"/>
                </StackPanel>

                <Grid Grid.Column="2">
                    <Grid.Resources>
                        <CollectionViewSource x:Key="AttributeResource" Source="{Binding Path=CurrentEntity.SelectedNode.AssociatedListing.FilteredPotentialChildren}">
                            <CollectionViewSource.GroupDescriptions>
                                <PropertyGroupDescription PropertyName="Type"/>
                            </CollectionViewSource.GroupDescriptions>
                        </CollectionViewSource>
                    </Grid.Resources>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" DataContext="{Binding Path=CurrentEntity.SelectedVariantNode}" Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label x:Name="VariantLabel" Content="Variant:" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" />
                        <ListBox x:Name="VariantListBox" Height="64" Margin="10,0,10,10" Grid.Row="1" ItemsSource="{Binding Path=VariantList}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>


                    <Grid Grid.Row="1" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Filter: " Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" />
                        <ComboBox x:Name="FilterComboBox" Margin="10,10,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="1" ItemsSource="{Binding Path=CurrentEntity.Filters}" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding TypeName}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>

                        </ComboBox>

                    </Grid>


                    <ListBox x:Name="AttributeListBox" Margin="10,5,10,10" Grid.Row="2" ItemsSource="{Binding Source={StaticResource AttributeResource}}" PreviewMouseDoubleClick="AttributeListBox_PreviewMouseDoubleClick" KeyDown="AttributeListBox_KeyDown" >
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock FontSize="14" FontWeight="Bold" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListBox.GroupStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Name}"  />
                            </DataTemplate>
                        </ListBox.ItemTemplate>



                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </Grid>

            <Grid Grid.Row="2" Margin="5 5 5 15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="65"></ColumnDefinition>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                    <ColumnDefinition Width="65"></ColumnDefinition>
                    <ColumnDefinition Width="15"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>

                <Label x:Name="NotesLabel" Content="Notes" Margin="5,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="0"/>
                <TextBox x:Name="NotesTextBox" Text="{Binding Path=CurrentEntity.SelectedNode.Notes}" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="1" Grid.RowSpan="4" Grid.ColumnSpan="1" TextWrapping="Wrap" VerticalAlignment="Stretch" />

                <Grid Grid.Row="0" Grid.Column="2" Grid.RowSpan="4" Grid.ColumnSpan="9" DataContext="{Binding Path=CurrentEntity.SelectedCharacter}"  Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Label x:Name="ACVLabel" Content="ACV" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="0" />
                    <TextBox x:Name="ACVTextBox" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="0" VerticalAlignment="Stretch" IsEnabled="False" Text="{Binding Path=Stats.ACV,Mode=OneWay}" />

                    <Label x:Name="DCVLabel" Content="DCV" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="2"/>
                    <TextBox x:Name="DCVTextBox" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="2" VerticalAlignment="Stretch" IsEnabled="False" Text="{Binding Path=Stats.DCV,Mode=OneWay}"/>

                    <TextBlock Text="Body" Grid.Row="0" Grid.Column="4"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="4" Margin="2,2,2,2" Text="{Binding Path=Body, Delay=100, UpdateSourceTrigger=PropertyChanged}" Minimum="1" />

                    <TextBlock Text="Mind" Grid.Row="0" Grid.Column="6"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="6" Margin="2,2,2,2" Text="{Binding Path=Mind, Delay=100, UpdateSourceTrigger=PropertyChanged}" Minimum="1" />

                    <TextBlock Text="Soul" Grid.Row="0" Grid.Column="8"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="8" Margin="2,2,2,2" Text="{Binding Path=Soul, Delay=100, UpdateSourceTrigger=PropertyChanged}" Minimum="1" />

                    <Label x:Name="HealthLabel" Content="Health" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="2" Grid.Column="4"/>
                    <TextBox x:Name="HealthTextBox" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="3" Grid.Column="4" VerticalAlignment="Stretch" IsEnabled="False" Text="{Binding Path=Stats.Health,Mode=OneWay}"/>

                    <Label x:Name="EnergyLabel" Content="Energy" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="2" Grid.Column="6"/>
                    <TextBox x:Name="EnergyTextBox" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="3" Grid.Column="6" VerticalAlignment="Stretch" IsEnabled="False" Text="{Binding Path=Stats.Energy,Mode=OneWay}"/>
                </Grid>

                <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="5" Grid.ColumnSpan="8" DataContext="{Binding Path=CurrentEntity.SelectedLevelable}"  Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label x:Name="LevelLabel" Content="Level" Visibility="Visible" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="0"/>
                    <TextBox x:Name="LevelTextBox" Text="{Binding Path=Level, Mode=OneWay}" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" IsEnabled="False" />

                    <Label x:Name="PointsPerLevelLabel" Content="Points Per Level" Visibility="Visible" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBox x:Name="PointsPerLevelTextBox" Text="{Binding Path=PointsPerLevel, Mode=OneWay}" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" IsEnabled="False" />

                    <Label x:Name="PointCostLabel" Content="Point Cost" HorizontalAlignment="Left" Visibility="Visible" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="2"/>
                    <TextBox x:Name="PointCostTextBox" Margin="5,0,5,5" Text="{Binding Path=Points, Mode=OneWay}" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="2" VerticalAlignment="Stretch" IsEnabled="False" />

                    <Label x:Name="DescriptionLabel" Content="Description" Visibility="Visible" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5"/>
                    <TextBox x:Name="DescriptionTextBox" Text="{Binding Path=AttributeDescription, Mode=OneWay}" Visibility="Visible" Margin="5,0,5,5" HorizontalAlignment="Stretch" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6" VerticalAlignment="Stretch" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" TextWrapping="Wrap" />

                </Grid>









            </Grid>

        </Grid>
    </Grid>
</Window>
